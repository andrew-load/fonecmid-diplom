
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
// МайоровАВ 250309 Нетология Автозаполнение докумена Начало доработки ((
// Прокект доработки модуля ВКМ	
	Для Каждого Реквизит Из ДанныеЗаполнения Цикл

		Если Реквизит.Ключ = "Дата" Тогда
			Дата = Реквизит.Значение;
		ИначеЕсли Реквизит.Ключ = "Контрагент" Тогда
			Контрагент = Реквизит.Значение;
		ИначеЕсли Реквизит.Ключ = "Организация" Тогда
			Организация = Реквизит.Значение;
		ИначеЕсли Реквизит.Ключ = "Договор" Тогда
			Договор = Реквизит.Значение;
		ИначеЕсли Реквизит.Ключ = "Договор" Тогда
			Основание = Реквизит.Значение;
		КонецЕсли;
	КонецЦикла;	
// )) Конец доработки МайоровАВ 250309 Нетология Автозаполнение докумена
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

// МайоровАВ 250309 Нетология Автозаполнение докумена Начало доработки ((
// Прокект доработки модуля ВКМ	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ДатаРеквизит = ПроверяемыеРеквизиты.Найти("Дата");
	КонтрагентРеквизит = ПроверяемыеРеквизиты.Найти("Контрагент");
	ОрганизацияРеквизит = ПроверяемыеРеквизиты.Найти("Организация");
	ДоговорРеквизит = ПроверяемыеРеквизиты.Найти("Договор");
	ОснованиеРеквизит = ПроверяемыеРеквизиты.Найти("Основание");
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена дата документа";
		Сообщение.Поле = "Дата";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ПроверяемыеРеквизиты.Удалить(ДатаРеквизит);
		Отказ = Истина;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено поле контрагент";
		Сообщение.Поле = "Контрагент";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ПроверяемыеРеквизиты.Удалить(КонтрагентРеквизит);
		Отказ = Истина;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено поле Организация";
		Сообщение.Поле = "Организация";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ПроверяемыеРеквизиты.Удалить(ОрганизацияРеквизит);
		Отказ = Истина;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Договор) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено поле Договор";
		Сообщение.Поле = "Договор";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ПроверяемыеРеквизиты.Удалить(ДоговорРеквизит);
		Отказ = Истина;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Основание) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено поле Основание";
		Сообщение.Поле = "Дата";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ПроверяемыеРеквизиты.Удалить(ОснованиеРеквизит);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры
// )) Конец доработки МайоровАВ 250309 Нетология Автозаполнение докумена

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

// МайоровАВ 250227 Нетология Автозаполнение докумена Начало доработки ((
// Прокект доработки модуля ВКМ
Процедура ВыполнитьАвтозаполнение(ДатаДокумета, Договор, Реализация) Экспорт

	Если Реализация = Неопределено Тогда
		ОбъектРеализации = ЭтотОбъект;
	Иначе
		ОбъектРеализации = Реализация;
	КонецЕсли;

	//ОбъектРеализации.Заполнить();

	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();

	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Тогда
		Если ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
			ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура абонентская плата"" не заполнена.");
			Возврат;
		Иначе
			ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура абонентская плата"" не заполнена.");
			ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура работы специалиста"" не заполнена.");	
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура работы специалиста"" не заполнена.");
		Возврат;
	КонецЕсли;
	
	ОбъектРеализации.Услуги.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата КАК АбонентскаяПлата,
		|	ДоговорыКонтрагентов.ВКМ_СтоимтостьЧаса КАК СтоимтостьЧаса
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	АбонентскаяПлата = ВыборкаДетальныеЗаписи.АбонентскаяПлата;
	СтоимтостьЧаса = ВыборкаДетальныеЗаписи.СтоимтостьЧаса;

	Если ЗначениеЗаполнено(АбонентскаяПлата) Тогда
		Строка = ОбъектРеализации.Услуги.Добавить();
		Строка.Номенклатура = НоменклатураАбонентскаяПлата;
		Строка.Количество = 1;
		Строка.Цена = АбонентскаяПлата;
		Строка.Сумма = АбонентскаяПлата;
	Иначе
		ОбщегоНазначения.СообщитьПользователю("Поле ""Абоненстская плата"" в договоре не заполнено .");
		Возврат;
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.КоличествоЧасовОборот) КАК КоличествоЧасовОборот,
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.СуммаКОплатеОборот) КАК СуммаКОплатеОборот
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&ДатаНачала, &ДатаОкончания,, ДоговорКонтрагента = &Ссылка) КАК
		|		ВКМ_ВыполненныеКлиентуРаботы";
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ДатаДокумета));
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ДатаДокумета));
	Запрос.УстановитьПараметр("Ссылка", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда		
		Строка = ОбъектРеализации.Услуги.Добавить();
		Строка.Номенклатура = НоменклатураРаботыСпециалиста;
		Строка.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасовОборот;
		Строка.Цена = СтоимтостьЧаса;
		Строка.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплатеОборот;
	Иначе
		ОбщегоНазначения.СообщитьПользователю("Работ по договору в данном периоде не было.");
		Возврат;
	КонецЕсли;
	
	ОбъектРеализации.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	
// )) Конец доработки МайоровАВ 250227 Нетология Автозаполнение докумена

#КонецОбласти


#КонецЕсли
