#Область ОписаниеПеременных
#КонецОбласти

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область ОбработчикиСобытий
// МайоровАВ Нетология 250227 доработка проведения документа начало доработки ((
// Проект внедрения ВКМ
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора КАК ВКМ_НачалоДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_ОкончаниеДействияДоговора КАК ВКМ_ОкончаниеДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_СтоимтостьЧаса
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка
	|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора";

	Запрос.УстановитьПараметр("Ссылка", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НачалоДействияДоговора = ВыборкаДетальныеЗаписи.ВКМ_НачалоДействияДоговора;
		ОкончаниеДействияДоговора = ВыборкаДетальныеЗаписи.ВКМ_ОкончаниеДействияДоговора;
		СтоимтостьЧаса = ВыборкаДетальныеЗаписи.ВКМ_СтоимтостьЧаса;
	КонецЦикла;
	

	Если ЗначениеЗаполнено(НачалоДействияДоговора) Тогда
		Если Дата < НачалоДействияДоговора Или Дата
			> ОкончаниеДействияДоговора Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Отказ в проведении так как дата документа Обслуживание клиента выходит за пределы договора";
				Сообщение.Сообщить();
				Отказ = Истина;
		КонецЕсли;

	КонецЕсли;
	
		// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Клиент;
		Движение.ДоговорКонтрагента = ДоговорКонтрагента;
		Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту * СтоимтостьЧаса;
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаПроведенияРабот, Сотрудник = &Специалист) КАК
		|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Специалист", Специалист);
	Запрос.УстановитьПараметр("ДатаПроведенияРабот", ДатаПроведенияРабот);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ПроцентОтРабот = ВыборкаДетальныеЗаписи.ПроцентОтРабот;
	Иначе
		ПроцентОтРабот = 0;
	КонецЕсли;
	
	
	// регистр ВКМ_ВыполненныеСотрудникомРаботы
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту * СтоимтостьЧаса * ПроцентОтРабот / 100;
	КонецЦикла;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ

КонецПроцедуры

// )) Конец доработки МайоровАВ Нетология 250227 доработка проведения документа
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти

#Область Инициализация

#КонецОбласти